{"version":3,"sources":["utils/utils.js","components/item/Item.jsx","components/listing/Listing.jsx","App.js","reportWebVitals.js","index.js"],"names":["getPrice","price","code","getQuantity","number","abbr","Item","item","state","url","MainImage","title","currency_code","quantity","className","href","src","url_570xN","alt","length","slice","Listing","items","map","listing_id","defaultProps","App","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"i8hFAAA,SAASA,EAASC,EAAOC,GAErB,MAAa,QAATA,EACM,IAAN,OAAWD,GAGF,QAATC,EACM,SAAN,OAAWD,GAGT,GAAN,OAAUA,EAAV,YAAmBC,GAGvB,SAASC,EAAYC,GACjB,IAAIC,EAAO,OAQX,OANID,GAAU,GACVC,EAAO,MACAD,GAAU,KACjBC,EAAO,UAGJA,E,WCcIC,MAjCf,YAAyB,IAATC,EAAQ,EAARA,KAEZ,GAAmB,WAAfA,EAAKC,MAAoB,OAAO,KAFhB,IAIZC,EAA0DF,EAA1DE,IAAKC,EAAqDH,EAArDG,UAAWC,EAA0CJ,EAA1CI,MAAOC,EAAmCL,EAAnCK,cAAeX,EAAoBM,EAApBN,MAAOY,EAAaN,EAAbM,SAErD,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACI,mBAAGC,KAAMN,EAAT,SACI,qBAAKO,IAAKN,EAAUO,UAAWC,IAAI,SAG3C,sBAAKJ,UAAU,eAAf,UACI,mBAAGA,UAAU,aAAb,SAA2BH,EAAMQ,OAAS,GAAf,UAAuBR,EAAMS,MAAM,EAAG,IAAtC,OAAiDT,IAC5E,mBAAGG,UAAU,aAAb,SAA2Bd,EAASC,EAAOW,KAC3C,oBAAGE,UAAS,8BAAyBX,EAAYU,IAAjD,UAA+DA,EAA/D,kBCfhB,SAASQ,EAAT,GAA6B,IAAVC,EAAS,EAATA,MAEf,OACI,qBAAKR,UAAU,YAAf,SACKQ,EAAMC,KAAI,SAAAhB,GAAI,OAAI,cAAC,EAAD,CAA4BA,KAAMA,GAAvBA,EAAKiB,iBAK/CH,EAAQI,aAAe,CACnBH,MAAO,IAOID,Q,aCXAK,MANf,WACE,OACE,cAAC,EAAD,CAASJ,MAAOK,KCMLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9ba9404c.chunk.js","sourcesContent":["function getPrice(price, code) {\n\n    if (code === 'USD') {\n        return `$${price}`\n    }\n\n    if (code === 'EUR') {\n        return `â‚¬${price}`\n    }\n\n    return `${price} ${code}`\n}\n\nfunction getQuantity(number) {\n    let abbr = 'high';\n\n    if (number <= 10) {\n        abbr = 'low';\n    } else if (number <= 20) {\n        abbr = 'medium'\n    }\n\n    return abbr\n}\n\nexport { getPrice, getQuantity }","import PropTypes from 'prop-types';\nimport { getPrice, getQuantity } from '../../utils/utils';\n\nfunction Item({ item }) {\n    // console.log(item.state)\n    if (item.state !== 'active') return null;\n\n    const { url, MainImage, title, currency_code, price, quantity } = item;\n\n    return (\n        <div className=\"item\">\n            <div className=\"item-image\">\n                <a href={url}>\n                    <img src={MainImage.url_570xN} alt=''/>\n                </a>\n            </div>\n            <div className=\"item-details\">\n                <p className=\"item-title\">{title.length > 50 ? `${title.slice(0, 50)}...` : title}</p>\n                <p className=\"item-price\">{getPrice(price, currency_code)}</p>\n                <p className={`item-quantity level-${getQuantity(quantity)}`}>{quantity} left</p>\n            </div>\n        </div>\n    )\n}\n\nItem.propTypes = {\n    item: PropTypes.shape({\n        url: PropTypes.string,\n        MainImage: PropTypes.object,\n        title: PropTypes.string,\n        currency_code: PropTypes.string,\n        price: PropTypes.string,\n        quantity: PropTypes.number\n    })   \n}\n\nexport default Item","import PropTypes from 'prop-types';\nimport Item from '../item/Item';\n\n\nfunction Listing({ items }) {\n\n    return (\n        <div className=\"item-list\">\n            {items.map(item => <Item key={item.listing_id} item={item} />)}\n        </div>\n    )\n}\n\nListing.defaultProps = {\n    items: []\n}\n\nListing.propTypes = {\n    items: PropTypes.array\n}\n\nexport default Listing;","import Listing from './components/listing/Listing';\nimport data from './data/data.json';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Listing items={data} />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}